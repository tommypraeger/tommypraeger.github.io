{"version":3,"sources":["Components/Header.js","Components/Footer.js","Components/About.js","Components/Portfolio.js","App.js","registerServiceWorker.js","index.js"],"names":["Header","this","props","data","name","networks","social","map","network","key","href","url","className","id","title","Component","Footer","About","profilePic","bio","phone","email","resumeDownload","address","street","city","state","zip","src","alt","download","Portfolio","projects","projectImage","image","category","App","foo","resumeData","$","ajax","dataType","cache","success","setState","bind","error","xhr","status","err","console","log","alert","getResumeData","main","portfolio","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.62f6642f.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Header extends Component {\n  render() {\n\n    if (this.props.data) {\n      var { name/*, occupation, description*/ } = this.props.data;\n      // var { city } = this.props.data.address;\n      var networks = this.props.data.social.map(function (network) {\n        return <li key={network.name}><a href={network.url}><i className={network.className}></i></a></li>\n      })\n    }\n\n    return (\n      <header id=\"home\">\n\n        <nav id=\"nav-wrap\">\n\n          <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">Show navigation</a>\n          <a className=\"mobile-btn\" href=\"#home\" title=\"Hide navigation\">Hide navigation</a>\n\n          <ul id=\"nav\" className=\"nav\">\n            <li className=\"current\"><a className=\"smoothscroll\" href=\"#home\">Home</a></li>\n            <li><a className=\"smoothscroll\" href=\"#about\">About</a></li>\n            {/*<li><a className=\"smoothscroll\" href=\"#resume\">Resume</a></li>*/}\n            <li><a className=\"smoothscroll\" href=\"#portfolio\">Projects</a></li>\n            {/*<li><a className=\"smoothscroll\" href=\"#testimonials\">Testimonials</a></li>*/}\n            {/*<li><a className=\"smoothscroll\" href=\"#contact\">Contact</a></li>*/}\n          </ul>\n\n        </nav>\n\n        <div className=\"row banner\">\n          <div className=\"banner-text\">\n            <h1 className=\"responsive-headline\">{name}</h1>\n            {/*<h3>I'm an {city} based <span>{occupation}</span>. {description}.</h3>*/}\n            <hr />\n            <ul className=\"social\">\n              {networks}\n            </ul>\n          </div>\n        </div>\n\n        <p className=\"scrolldown\">\n          <a className=\"smoothscroll\" href=\"#about\"><i className=\"icon-down-circle\"></i></a>\n        </p>\n\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\n\nclass Footer extends Component {\n  render() {\n\n    if (this.props.data) {\n      var networks = this.props.data.social.map(function (network) {\n        return <li key={network.name}><a href={network.url}><i className={network.className}></i></a></li>\n      })\n    }\n\n    return (\n      <footer>\n\n        <div className=\"row\">\n          <div className=\"twelve columns\">\n            <ul className=\"social-links\">\n              {networks}\n            </ul>\n            {/*\n            <ul className=\"copyright\">\n              <li>&copy; Copyright 2017 Tim Baker</li>\n              <li>Design by <a title=\"Styleshout\" href=\"http://www.styleshout.com/\">Styleshout</a></li>\n            </ul>\n            */}\n\n          </div>\n          <div id=\"go-top\"><a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\"><i className=\"icon-up-open\"></i></a></div>\n        </div>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\n\nclass About extends Component {\n  render() {\n\n    if (this.props.data) {\n      var {\n        name, profilePic, bio, phone, email, resumeDownload\n      } = this.props.data;\n      var {\n        street, city, state, zip\n      } = this.props.data.address;\n      profilePic = `images/${profilePic}`;\n    }\n\n    return (\n      <section id=\"about\">\n        <div className=\"row\">\n          <div className=\"three columns\">\n            <img className=\"profile-pic\" src={profilePic} alt=\"Tommy Praeger Profile Pic\" />\n          </div>\n          <div className=\"nine columns main-col\">\n            <h2>About Me</h2>\n\n            <p>{bio}</p>\n            <div className=\"row\">\n              <div className=\"columns contact-details\">\n                <h2>Contact Details</h2>\n                <p className=\"address\">\n                  <span>{name}</span><br />\n                  <span>{street}<br />\n                    {city}, {state}, {zip}\n                  </span><br />\n                  <span>{phone}</span><br />\n                  <span>{email}</span>\n                </p>\n              </div>\n              <div className=\"columns download\">\n                <p>\n                  <a href={resumeDownload} className=\"button\" download>\n                    <i className=\"fa fa-download\">\n                    </i>Download Resume\n                  </a>\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n      </section>\n    );\n  }\n}\n\nexport default About;\n","import React, { Component } from 'react';\n\nclass Portfolio extends Component {\n  render() {\n\n    if (this.props.data) {\n      var projects = this.props.data.projects.map(function (projects) {\n        var projectImage = 'images/portfolio/' + projects.image;\n        return <div key={projects.title} className=\"columns portfolio-item\">\n          <div className=\"item-wrap\">\n            <a href={projects.url} title={projects.title}>\n              <img alt={projects.title} src={projectImage} />\n              <div className=\"overlay\">\n                <div className=\"portfolio-item-meta\">\n                  <h5>{projects.title}</h5>\n                </div>\n              </div>\n              <div className=\"link-icon\"><i className=\"fa fa-link\"></i></div>\n            </a>\n          </div>\n          <p>{projects.category}</p>\n        </div>\n      })\n    }\n\n    return (\n      <section id=\"portfolio\">\n\n        <div className=\"row\">\n\n          <div className=\"twelve columns collapsed\">\n\n            <h1>Projects</h1>\n\n            <div id=\"portfolio-wrapper\" className=\"cf\">\n              {projects}\n            </div>\n            <div className=\"twelve columns\">\n              Most of my other big projects have been done for classes or internships, \n              but I hope to add more soon. For now, I have some smaller projects on my GitHub.\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Portfolio;\n","import React, { Component } from 'react';\nimport $ from 'jquery';\nimport './App.css';\nimport Header from './Components/Header';\nimport Footer from './Components/Footer';\nimport About from './Components/About';\n// import Resume from './Components/Resume';\n// import Contact from './Components/Contact';\n// import Testimonials from './Components/Testimonials';\nimport Portfolio from './Components/Portfolio';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      foo: 'bar',\n      resumeData: {}\n    };\n\n  }\n\n  getResumeData() {\n    $.ajax({\n      url: '/resumeData.json',\n      dataType: 'json',\n      cache: false,\n      success: function (data) {\n        this.setState({ resumeData: data });\n      }.bind(this),\n      error: function (xhr, status, err) {\n        console.log(err);\n        alert(err);\n      }\n    });\n  }\n\n  componentDidMount() {\n    this.getResumeData();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header data={this.state.resumeData.main} />\n        <About data={this.state.resumeData.main} />\n        {/*<Resume data={this.state.resumeData.resume} />*/}\n        <Portfolio data={this.state.resumeData.portfolio} />\n        {/*<Testimonials data={this.state.resumeData.testimonials} />*/}\n        {/*<Contact data={this.state.resumeData.main} />*/}\n        <Footer data={this.state.resumeData.main} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}